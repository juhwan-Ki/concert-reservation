openapi: 3.0.1
info:
  title: 콘서트 예약 API
  description: 예약/결제/좌석조회 API 명세
  version: v1.0.0
servers:
- url: http://localhost:18080
  description: Generated server url
security:
- bearerAuth: []
tags:
- name: Reservation
  description: "예약 가능 날짜/좌석 조회, 예약/취소"
- name: Concert
  description: "콘서트 조회,단일 조회,공연 조회"
- name: User
  description: 회원가입
- name: Queue
  description: 대기열 토큰 발급/상태 확인
- name: Auth
  description: 로그인/토큰 갱신/로그아웃
- name: Point
  description: 포인트 조회/포인트 충전/포인트 내역 조회
paths:
  /api/v1/users/sign-up:
    post:
      tags:
      - User
      summary: 회원가입
      description: 회원가입을 진행한다.
      operationId: signUp
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SingUpRequest"
        required: true
      responses:
        "409":
          description: 이미 가입된 사용자(이메일/닉네임 중복)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "400":
          description: 유효성 검증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "201":
          description: 가입 성공
  /api/v1/users/me/points/charges:
    post:
      tags:
      - Point
      summary: 내 포인트 충전
      description: 현재 로그인한 사용자의 포인트를 충전한다.
      operationId: chargePoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PointRequest"
        required: true
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PointResponse"
        "422":
          description: "도메인 규칙 위반(예: 최대/최소 충전 한도 초과)"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "400":
          description: 요청 값 검증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/reservations/{reservationId}/cancel:
    post:
      tags:
      - Reservation
      summary: 예약 취소(환불 요청)
      operationId: cancelReservation
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "409":
          description: 환불 불가 상태 (기간 만료 등)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "200":
          description: 환불 요청 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/RefundResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "404":
          description: 예약 없음
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/reservations/:
    get:
      tags:
      - Reservation
      summary: 내 예약 목록 조회
      operationId: getMyReservations
      responses:
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationResponse"
    post:
      tags:
      - Reservation
      summary: 좌석 예약
      description: 선택한 좌석을 임시 점유하고 예약을 생성한다. 결제 마감 시간(expiresAt)을 함께 반환한다.
      operationId: createReservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReservationRequest"
        required: true
      responses:
        "400":
          description: 검증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "409":
          description: 좌석 점유 충돌(이미 예약/홀드됨)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "201":
          description: 생성됨
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationCreateResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "404":
          description: 회차/좌석 없음
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
      security:
      - bearerAuth: []
  /api/v1/queues/tokens:
    post:
      tags:
      - Queue
      summary: 대기열 토큰 발급
      description: 유저 토큰으로 대기열에 진입하고 토큰을 발급받는다.
      operationId: issueToken
      responses:
        "429":
          description: 대기열 만석
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "201":
          description: 발급 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/QueueTokenResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
  /api/v1/payments/:
    post:
      tags:
      - Payment
      summary: 결제
      description: "예약 ID와 금액으로 즉시 결제를 시도한다. (멱등성 지원: Idempotency-Key)"
      operationId: pay
      parameters:
      - name: Idempotencyxx-Key
        in: header
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChargeRequest"
        required: true
      responses:
        "400":
          description: 검증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "409":
          description: 상태 충돌(이미 확정/만료/취소/금액불일치)
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "404":
          description: 예약 없음
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "200":
          description: 결제 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ChargeResponse"
  /api/v1/auth/refresh:
    post:
      tags:
      - Auth
      summary: Access 재발급
      description: 자격 증명을 검증하고 액세스 토큰을 재발급한다.
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
        required: true
      responses:
        "401":
          description: 재발급 불가
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/v1/auth/logout:
    post:
      tags:
      - Auth
      summary: 로그아웃
      description: 로그아웃을 진행한다.
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogoutRequest"
      responses:
        "401":
          description: 인증 필요
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "204":
          description: 성공
      security:
      - bearerAuth: []
  /api/v1/auth/login:
    post:
      tags:
      - Auth
      summary: 로그인(토큰 발급)
      description: 자격 증명을 검증하고 액세스 토큰을 발급한다.
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/TokenResponse"
  /api/v1/admins/concerts:
    post:
      tags:
      - Admin
      summary: 콘서트 생성
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConcertCreateRequest"
        required: true
      responses:
        "400":
          description: 검증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "201":
          description: 생성됨
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConcertResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/admins/concerts/{concertId}/unpublish:
    post:
      tags:
      - Admin
      summary: 비공개 전환
      operationId: unpublish
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 101
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConcertResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/admins/concerts/{concertId}/publish:
    post:
      tags:
      - Admin
      summary: 공개 전환
      operationId: publish
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 101
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConcertResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/admins/concerts/{concertId}:
    delete:
      tags:
      - Admin
      summary: 콘서트 삭제(소프트)
      operationId: delete
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 101
      responses:
        "204":
          description: 삭제됨
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
    patch:
      tags:
      - Admin
      summary: 콘서트 수정(patch)
      operationId: update
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 101
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConcertUpdateRequest"
        required: true
      responses:
        "400":
          description: 검증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConcertResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/users/me/points/histories:
    get:
      tags:
      - Point
      summary: 내 포인트 내역 조회
      description: 현재 로그인한 사용자의 포인트 내역을 조회한다.
      operationId: getMyPointHistories
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: type
        in: query
        required: false
        schema:
          type: string
          enum:
          - CHARGE
          - USE
          - REFUND
      - name: from
        in: query
        required: false
        schema:
          type: string
          format: date-time
      - name: to
        in: query
        required: false
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PointHistoryPage"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/users/me/points/:
    get:
      tags:
      - Point
      summary: 내 포인트 조회
      description: 현재 로그인한 사용자의 포인트 잔액을 조회한다.
      operationId: getMyPoint
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PointResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/reservations/{reservationId}:
    get:
      tags:
      - Reservation
      summary: 예약 상세 조회
      operationId: getReservation
      parameters:
      - name: reservationId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationDetail"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "404":
          description: 예약 없음
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/reservations/{concertId}:
    get:
      tags:
      - Reservation
      summary: 예약 가능 날짜 조회
      operationId: getReservations
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 101
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ShowResponseList"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/reservations/{concertId}/{showId}:
    get:
      tags:
      - Reservation
      summary: 예약 가능 좌석 조회
      operationId: getAvailableSeats
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 101
      - name: showId
        in: path
        description: 회차 ID
        required: true
        schema:
          type: integer
          format: int64
        example: 202
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/SeatAvailabilityResponseList"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/queues/status:
    get:
      tags:
      - Queue
      summary: 대기열 상태 확인
      description: "본인의 대기 순서, 예상 대기 시간, 입장 가능 여부를 조회한다."
      operationId: checkStatus
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/QueueStatusResponse"
        "401":
          description: 인증 실패
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ApiException"
      security:
      - bearerAuth: []
  /api/v1/concerts/{concertId}:
    get:
      tags:
      - Concert
      summary: 콘서트 상세 조회
      description: 현재 진행중인 콘서트 상세 내역을 조회한다.
      operationId: getConcertDetail
      parameters:
      - name: concertId
        in: path
        required: true
        schema:
          minimum: 1
          type: integer
          format: int64
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConcertDetailResponse"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "404":
          description: 없음
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/concerts/{concertId}/shows:
    get:
      tags:
      - Concert
      summary: 공연 목록 조회
      description: 특정 콘서트의 공연 일정을 조회한다.
      operationId: geListShows
      parameters:
      - name: concertId
        in: path
        description: 콘서트 ID
        required: true
        schema:
          minimum: 1
          type: integer
          format: int64
        example: 101
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ShowResponseList"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
        "404":
          description: 없음
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
  /api/v1/concerts/:
    get:
      tags:
      - Concert
      summary: 콘서트 조회
      description: 현재 진행중인 콘서트 리스트를 조회한다.
      operationId: getConcertPage
      parameters:
      - name: page
        in: query
        required: false
        schema:
          minimum: 0
          type: string
          example: 0
        example: 0
      - name: size
        in: query
        required: false
        schema:
          maximum: 100
          minimum: 1
          type: string
          example: 20
        example: 20
      - name: keyword
        in: query
        required: false
        schema:
          type: string
          example: QWER
        example: QWER
      - name: from
        in: query
        description: 시작날짜(이상)
        required: false
        schema:
          type: string
          description: 시작날짜(이상)
          example: 2025-08-01
        example: 2025-08-01
      - name: to
        in: query
        description: 종료날짜(미만)
        required: false
        schema:
          type: string
          description: 종료날짜(미만)
          example: 2025-08-31
        example: 2025-08-31
      responses:
        "200":
          description: 성공
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ConcertPage"
        "500":
          description: 서버 오류
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProblemDetail"
components:
  schemas:
    SingUpRequest:
      required:
      - loginId
      - name
      - password
      - role
      type: object
      properties:
        loginId:
          type: string
          description: 사용자 이메일
          example: user@example.com
        password:
          type: string
          description: 비밀번호
          example: P@ssw0rd!
        name:
          type: string
          description: 사용자 이름
          example: 손흥민
        role:
          type: string
          description: 사용자 권한
          example: USER
          enum:
          - USER
          - ADMIN
          - USER
          - ADMIN
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
    PointRequest:
      required:
      - amount
      - useType
      type: object
      properties:
        amount:
          type: integer
          description: 충천/사용 금액
          format: int64
          example: 2000
        useType:
          type: string
          description: 사용 타입
          example: CHARGE
          enum:
          - CHARGE
          - USE
          - REFUND
          - CHARGE
          - USE
          - REFUND
      description: 포인트 충전/사용 요청
    PointResponse:
      type: object
      properties:
        balance:
          type: integer
          description: 잔액
          format: int64
          example: 1800
        asOf:
          type: string
          description: 잔액 기준 시각
          format: date-time
      description: 포인트 응답
    ApiException:
      type: object
      properties:
        code:
          type: string
          example: TOKEN_EXPIRED
        message:
          type: string
          example: 토큰이 만료되었습니다.
      description: 공통 에러 응답
    RefundResponse:
      type: object
      properties:
        status:
          type: string
          description: 환불 처리 상태
          example: REQUESTED
        amount:
          type: integer
          description: 환불 금액
          format: int64
          example: 300000
        processedAt:
          type: string
          description: 환불 처리 일시
          format: date-time
      description: 환불 응답
    ReservationRequest:
      required:
      - seatIds
      - showId
      type: object
      properties:
        showId:
          type: integer
          description: 회차 ID
          format: int64
          example: 202
        seatIds:
          type: array
          items:
            type: integer
            format: int64
            example: 31005
      description: 좌석 예약 생성 요청
    ReservationCreateResponse:
      type: object
      properties:
        reservationId:
          type: integer
          description: 예약 ID
          format: int64
          example: 5001
        status:
          type: string
          description: 예약 상태
          example: HOLD
        expiresAt:
          type: string
          description: 결제 마감 시각(만료)
          format: date-time
          example: 2025-09-01T20:00:00+09:00
        totalAmount:
          type: integer
          description: 총액
          format: int64
          example: 300000
      description: 좌석 예약 응답
    QueueTokenResponse:
      type: object
      properties:
        queueToken:
          type: string
          example: qtok_abc123xyz
        userId:
          type: string
          example: c1a2b3d4-e5f6-7890-1234-56789abcdef0
        position:
          type: integer
          format: int32
          example: 1523
        estimatedWaitSeconds:
          type: integer
          format: int32
          example: 420
      description: 대기열 토큰 응답
    ChargeRequest:
      required:
      - amount
      - reservationId
      type: object
      properties:
        reservationId:
          type: integer
          description: 예약 ID
          format: int64
          example: 5001
        amount:
          type: integer
          description: 결제 금액
          format: int64
          example: 300000
      description: 바로 결제 요청
    ChargeResponse:
      type: object
      properties:
        paymentId:
          type: integer
          description: 결제 ID
          format: int64
        reservationId:
          type: integer
          description: 예약 ID
          format: int64
          example: 5001
        status:
          type: string
          description: 결제 상태
          example: SUCCEEDED
        amount:
          type: integer
          description: 결제 금액
          format: int64
          example: 300000
        paidAt:
          type: string
          description: 결제 완료 시간
          format: date-time
      description: 결제 응답
    RefreshRequest:
      required:
      - refreshToken
      type: object
      properties:
        refreshToken:
          type: string
          example: rft_eyJhbGciOi...
      description: Access 재발급 요청
    TokenResponse:
      type: object
      properties:
        tokenType:
          type: string
          example: Bearer
        accessToken:
          type: string
          description: JWT Access Token
          example: eyJhbGciOi...
        expiresIn:
          type: integer
          description: Access 만료(초)
          format: int32
          example: 1800
        refreshToken:
          type: string
          description: "JWT Refresh Token (로그인 시 항상, 재발급 시 선택적)"
          nullable: true
          example: rft_eyJhbGciOi...
        refreshExpiresIn:
          type: integer
          description: "Refresh 만료(초, 로그인 시에만 의미)"
          format: int32
          nullable: true
          example: 1209600
      description: 토큰 응답 (로그인/재발급 공용)
    LogoutRequest:
      type: object
      properties:
        refreshToken:
          type: string
          example: rft_eyJhbGciOi...
      description: 로그아웃 요청
    LoginRequest:
      required:
      - loginId
      - password
      type: object
      properties:
        loginId:
          type: string
          description: 사용자 이메일
          example: user@example.com
        password:
          type: string
          description: 비밀번호
          example: P@ssw0rd!
      description: 로그인 요청
    ConcertCreateRequest:
      required:
      - ageRating
      - artist
      - endDate
      - posterUrl
      - runtime
      - showRequestList
      - startDate
      - thumbnailUrl
      - title
      type: object
      properties:
        venueId:
          type: integer
          description: 공연장 id
          format: int64
          example: 1
        title:
          type: string
          description: 콘서트명
          example: 임영웅 IM HERO TOUR 2025
        artist:
          type: string
          description: 아티스트명
          example: 임영웅
        description:
          maxLength: 5000
          minLength: 0
          type: string
          description: 공연정보
          example: IM HERO TOUR 2025 영웅시대를 위한...
        runtime:
          type: string
          description: 공연시간
          example: 150분
        ageRating:
          type: string
          description: 관람연령
          example: 만7세이상
        startDate:
          type: string
          description: 공연시작일자
          example: 2025-08-12
        endDate:
          type: string
          description: 공연종료일자
          example: 2025-08-20
        thumbnailUrl:
          type: string
          description: 섬네일 이미지 url
          example: https://imga-asdasdasc.com?asdasdas
        posterUrl:
          type: string
          description: 포스터 이미지 url
          example: https://imga-asdasdasc.com?asdasdas
        showRequestList:
          type: array
          description: 공연목록
          items:
            $ref: "#/components/schemas/ShowRequest"
      description: 콘서트 생성 요청
    ShowRequest:
      required:
      - showDate
      - title
      - venueId
      type: object
      properties:
        venueId:
          type: integer
          description: 공연장 id
          format: int64
          example: 1
        title:
          type: string
          description: 공연제목
          example: 임영웅 IM HERO TOUR 2025 - 인천
        showDate:
          type: string
          description: 공연일자
          example: 2025-08-12:13:00
      description: 공연 생성 요청
    ConcertResponse:
      required:
      - thumbnailUrl
      type: object
      properties:
        id:
          type: integer
          description: 콘서트 id
          format: int64
          example: 1
        title:
          type: string
          description: 콘서트 명
          example: 보컬 전쟁 시즌2 “The War of Vocalists II”
        venueName:
          type: string
          description: 공연장 명
          example: 인천 인스파이어 아레나
        artist:
          type: string
          description: 아티스트 명
          example: QWER
        status:
          type: string
          description: 상태
          example: 공개
        startAt:
          type: string
          description: 시작일
          format: date
          example: 2025-08-12
        endAt:
          type: string
          description: 종료일
          format: date
          example: 2025-08-12
        thumbnailUrl:
          type: string
          description: 섬네일 이미지 url
          example: https://imga-asdasdasc.com?asdasdas
    ConcertUpdateRequest:
      type: object
      properties:
        venueId:
          type: integer
          description: 공연장 id
          format: int64
          example: 1
        title:
          type: string
          description: 콘서트명
          example: 임영웅 IM HERO TOUR 2025
        artist:
          type: string
          description: 아티스트명
          example: 임영웅
        description:
          maxLength: 5000
          minLength: 0
          type: string
          description: 공연정보
          example: IM HERO TOUR 2025 영웅시대를 위한...
        runtime:
          type: string
          description: 공연시간
          example: 150분
        ageRating:
          type: string
          description: 관람연령
          example: 만7세이상
        startDate:
          type: string
          description: 공연시작일자
          example: 2025-08-12
        endDate:
          type: string
          description: 공연종료일자
          example: 2025-08-20
        thumbnailUrl:
          type: string
          description: 섬네일 이미지 url
          example: https://imga-asdasdasc.com?asdasdas
        posterUrl:
          type: string
          description: 포스터 이미지 url
          example: https://imga-asdasdasc.com?asdasdas
        showRequestList:
          type: array
          description: 공연목록
          items:
            $ref: "#/components/schemas/ShowRequest"
      description: 콘서트 수정 요청
    PointHistoryItem:
      type: object
      properties:
        type:
          type: string
          description: 포인트 사용 타입
          example: USE
        amount:
          type: integer
          description: 사용/충전 금액
          format: int64
          example: 1800
        balanceAfter:
          type: integer
          description: 사용/충전 후 잔액
          format: int64
          example: 10000
        createdAt:
          type: string
          description: 생성 시각
          format: date-time
    PointHistoryPage:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/PointHistoryItem"
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        hasNext:
          type: boolean
    ReservationDetail:
      type: object
      properties:
        reservationId:
          type: integer
          description: 예약 ID
          format: int64
          example: 5001
        showId:
          type: integer
          description: 회차 ID
          format: int64
          example: 202
        concertId:
          type: integer
          description: 콘서트 ID
          format: int64
          example: 101
        status:
          type: string
          description: 예약 상태
          example: RESERVED
        concertTitle:
          type: string
          description: 콘서트명
          example: 히구치 아이 밴드 투어
        showTitle:
          type: string
          description: 공연명
          example: 히구치 아이 밴드 투어 2025-2026 in Seoul “wishing me happiness”
        showAt:
          type: string
          description: 공연시간
          format: date-time
        totalAmount:
          type: integer
          description: 총액
          format: int64
          example: 300000
        seats:
          type: array
          description: 예약 좌석 목록
          items:
            $ref: "#/components/schemas/ReservedSeat"
      description: 예약 상세
    ReservedSeat:
      type: object
      properties:
        seatId:
          type: integer
          description: 좌석 ID
          format: int64
          example: 31005
        seatLabel:
          type: string
          description: 좌석 표기
          example: A-12
        price:
          type: integer
          description: 가격
          format: int64
          example: 150000
      description: 예약된 좌석
    ShowResponse:
      type: object
      properties:
        id:
          type: integer
          description: 공연 id
          format: int64
          example: 1
        showTitle:
          type: string
          description: 공연명
          example: 보컬 전쟁 시즌2 “The War of Vocalists II” - 대전
        venueName:
          type: string
          description: 공연장 명
          example: 인천 인스파이어 아레나
        showAt:
          type: string
          description: 공연 시작 시각
          format: date-time
      description: 공연 단건
    ShowResponseList:
      type: object
      properties:
        items:
          type: array
          description: 공연 목록
          items:
            $ref: "#/components/schemas/ShowResponse"
      description: 공연 목록
    SeatAvailabilityResponseList:
      type: object
      properties:
        seats:
          type: array
          description: 좌석 목록
          items:
            $ref: "#/components/schemas/SeatResponse"
      description: 좌석 목록 조회
    SeatResponse:
      type: object
      properties:
        seatId:
          type: integer
          description: 좌석 ID
          format: int64
          example: 31005
        seatLabel:
          type: string
          description: 좌석 표기
          example: A-12
        price:
          type: number
          description: 가격
          example: 150000
        available:
          type: boolean
          description: 예약 가능 여부
          example: true
      description: 좌석 단건 정보
    ReservationResponse:
      type: object
      properties:
        reservationId:
          type: integer
          description: 예약 ID
          format: int64
          example: 5001
        concertTitle:
          type: string
          description: 콘서트명
          example: 히구치 아이 밴드 투어
        showTitle:
          type: string
          description: 공연명
          example: 히구치 아이 밴드 투어 2025-2026 in Seoul “wishing me happiness”
        showAt:
          type: string
          description: 공연시간
          format: date-time
        status:
          type: string
          description: 예약 상태
          example: RESERVED
        totalAmount:
          type: integer
          description: 총액
          format: int64
          example: 300000
      description: 좌석 예약 응답
    QueueStatusResponse:
      type: object
      properties:
        position:
          type: integer
          format: int32
          example: 1523
        estimatedWaitSeconds:
          type: integer
          format: int32
          example: 400
        active:
          type: boolean
          example: false
      description: 대기열 상태 응답
    ConcertDetailResponse:
      type: object
      properties:
        ageRating:
          type: string
          description: 관람연령
          example: 만 7세이상
        runtime:
          type: string
          description: 공연시간
          example: 150분
        description:
          type: string
          description: 공연정보
          example: 셰익스피어의 대표작을 현대적으로 재해석한...
        posterUrl:
          type: string
          description: 포스터 이미지 url
          example: https://imga-asdasdasc.com?asdasdas
        showList:
          type: array
          description: 공연 리스트
          items:
            $ref: "#/components/schemas/ShowResponse"
    ConcertPage:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ConcertResponse"
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        hasNext:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      name: Authorization
      scheme: bearer
      bearerFormat: JWT
